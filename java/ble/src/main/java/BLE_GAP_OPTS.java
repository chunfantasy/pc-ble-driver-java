/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public final class BLE_GAP_OPTS {
  public final static BLE_GAP_OPTS BLE_GAP_OPT_CH_MAP = new BLE_GAP_OPTS("BLE_GAP_OPT_CH_MAP", 0x20);
  public final static BLE_GAP_OPTS BLE_GAP_OPT_LOCAL_CONN_LATENCY = new BLE_GAP_OPTS("BLE_GAP_OPT_LOCAL_CONN_LATENCY");
  public final static BLE_GAP_OPTS BLE_GAP_OPT_PASSKEY = new BLE_GAP_OPTS("BLE_GAP_OPT_PASSKEY");
  public final static BLE_GAP_OPTS BLE_GAP_OPT_SCAN_REQ_REPORT = new BLE_GAP_OPTS("BLE_GAP_OPT_SCAN_REQ_REPORT");
  public final static BLE_GAP_OPTS BLE_GAP_OPT_COMPAT_MODE_1 = new BLE_GAP_OPTS("BLE_GAP_OPT_COMPAT_MODE_1");
  public final static BLE_GAP_OPTS BLE_GAP_OPT_AUTH_PAYLOAD_TIMEOUT = new BLE_GAP_OPTS("BLE_GAP_OPT_AUTH_PAYLOAD_TIMEOUT");
  public final static BLE_GAP_OPTS BLE_GAP_OPT_SLAVE_LATENCY_DISABLE = new BLE_GAP_OPTS("BLE_GAP_OPT_SLAVE_LATENCY_DISABLE");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static BLE_GAP_OPTS swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + BLE_GAP_OPTS.class + " with value " + swigValue);
  }

  private BLE_GAP_OPTS(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private BLE_GAP_OPTS(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private BLE_GAP_OPTS(String swigName, BLE_GAP_OPTS swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static BLE_GAP_OPTS[] swigValues = { BLE_GAP_OPT_CH_MAP, BLE_GAP_OPT_LOCAL_CONN_LATENCY, BLE_GAP_OPT_PASSKEY, BLE_GAP_OPT_SCAN_REQ_REPORT, BLE_GAP_OPT_COMPAT_MODE_1, BLE_GAP_OPT_AUTH_PAYLOAD_TIMEOUT, BLE_GAP_OPT_SLAVE_LATENCY_DISABLE };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

