/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public final class BLE_GATTC_EVTS {
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_PRIM_SRVC_DISC_RSP = new BLE_GATTC_EVTS("BLE_GATTC_EVT_PRIM_SRVC_DISC_RSP", 0x30);
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_REL_DISC_RSP = new BLE_GATTC_EVTS("BLE_GATTC_EVT_REL_DISC_RSP");
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_CHAR_DISC_RSP = new BLE_GATTC_EVTS("BLE_GATTC_EVT_CHAR_DISC_RSP");
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_DESC_DISC_RSP = new BLE_GATTC_EVTS("BLE_GATTC_EVT_DESC_DISC_RSP");
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_ATTR_INFO_DISC_RSP = new BLE_GATTC_EVTS("BLE_GATTC_EVT_ATTR_INFO_DISC_RSP");
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_CHAR_VAL_BY_UUID_READ_RSP = new BLE_GATTC_EVTS("BLE_GATTC_EVT_CHAR_VAL_BY_UUID_READ_RSP");
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_READ_RSP = new BLE_GATTC_EVTS("BLE_GATTC_EVT_READ_RSP");
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_CHAR_VALS_READ_RSP = new BLE_GATTC_EVTS("BLE_GATTC_EVT_CHAR_VALS_READ_RSP");
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_WRITE_RSP = new BLE_GATTC_EVTS("BLE_GATTC_EVT_WRITE_RSP");
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_HVX = new BLE_GATTC_EVTS("BLE_GATTC_EVT_HVX");
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_EXCHANGE_MTU_RSP = new BLE_GATTC_EVTS("BLE_GATTC_EVT_EXCHANGE_MTU_RSP");
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_TIMEOUT = new BLE_GATTC_EVTS("BLE_GATTC_EVT_TIMEOUT");
  public final static BLE_GATTC_EVTS BLE_GATTC_EVT_WRITE_CMD_TX_COMPLETE = new BLE_GATTC_EVTS("BLE_GATTC_EVT_WRITE_CMD_TX_COMPLETE");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static BLE_GATTC_EVTS swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + BLE_GATTC_EVTS.class + " with value " + swigValue);
  }

  private BLE_GATTC_EVTS(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private BLE_GATTC_EVTS(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private BLE_GATTC_EVTS(String swigName, BLE_GATTC_EVTS swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static BLE_GATTC_EVTS[] swigValues = { BLE_GATTC_EVT_PRIM_SRVC_DISC_RSP, BLE_GATTC_EVT_REL_DISC_RSP, BLE_GATTC_EVT_CHAR_DISC_RSP, BLE_GATTC_EVT_DESC_DISC_RSP, BLE_GATTC_EVT_ATTR_INFO_DISC_RSP, BLE_GATTC_EVT_CHAR_VAL_BY_UUID_READ_RSP, BLE_GATTC_EVT_READ_RSP, BLE_GATTC_EVT_CHAR_VALS_READ_RSP, BLE_GATTC_EVT_WRITE_RSP, BLE_GATTC_EVT_HVX, BLE_GATTC_EVT_EXCHANGE_MTU_RSP, BLE_GATTC_EVT_TIMEOUT, BLE_GATTC_EVT_WRITE_CMD_TX_COMPLETE };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

