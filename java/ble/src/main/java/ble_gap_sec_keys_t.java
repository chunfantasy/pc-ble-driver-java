/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class ble_gap_sec_keys_t {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ble_gap_sec_keys_t(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ble_gap_sec_keys_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        pc_ble_driver_sd_api_v5JNI.delete_ble_gap_sec_keys_t(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setP_enc_key(ble_gap_enc_key_t value) {
    pc_ble_driver_sd_api_v5JNI.ble_gap_sec_keys_t_p_enc_key_set(swigCPtr, this, ble_gap_enc_key_t.getCPtr(value), value);
  }

  public ble_gap_enc_key_t getP_enc_key() {
    long cPtr = pc_ble_driver_sd_api_v5JNI.ble_gap_sec_keys_t_p_enc_key_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ble_gap_enc_key_t(cPtr, false);
  }

  public void setP_id_key(ble_gap_id_key_t value) {
    pc_ble_driver_sd_api_v5JNI.ble_gap_sec_keys_t_p_id_key_set(swigCPtr, this, ble_gap_id_key_t.getCPtr(value), value);
  }

  public ble_gap_id_key_t getP_id_key() {
    long cPtr = pc_ble_driver_sd_api_v5JNI.ble_gap_sec_keys_t_p_id_key_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ble_gap_id_key_t(cPtr, false);
  }

  public void setP_sign_key(ble_gap_sign_info_t value) {
    pc_ble_driver_sd_api_v5JNI.ble_gap_sec_keys_t_p_sign_key_set(swigCPtr, this, ble_gap_sign_info_t.getCPtr(value), value);
  }

  public ble_gap_sign_info_t getP_sign_key() {
    long cPtr = pc_ble_driver_sd_api_v5JNI.ble_gap_sec_keys_t_p_sign_key_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ble_gap_sign_info_t(cPtr, false);
  }

  public void setP_pk(ble_gap_lesc_p256_pk_t value) {
    pc_ble_driver_sd_api_v5JNI.ble_gap_sec_keys_t_p_pk_set(swigCPtr, this, ble_gap_lesc_p256_pk_t.getCPtr(value), value);
  }

  public ble_gap_lesc_p256_pk_t getP_pk() {
    long cPtr = pc_ble_driver_sd_api_v5JNI.ble_gap_sec_keys_t_p_pk_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ble_gap_lesc_p256_pk_t(cPtr, false);
  }

  public ble_gap_sec_keys_t() {
    this(pc_ble_driver_sd_api_v5JNI.new_ble_gap_sec_keys_t(), true);
  }

}
